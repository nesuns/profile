{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","src","size","before","indicator","type","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","connect","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","a","async","sendPromise","user","fetchData","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"qlBAuCeA,EAhCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,EAAOC,GAAP,EAAWC,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,mDAEA,kBAAC,IAAD,KACC,gCAAQ,kBAAC,IAAD,CAAQG,IAAI,uEAAuEC,KAAM,MACjG,gCAAQ,kBAAC,IAAD,KAAM,+FAEf,kBAAC,IAAD,MACA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMC,OAAQ,kBAAC,IAAD,MAAmBC,UAAW,kBAAC,IAAD,CAASC,KAAK,WAAd,MAA5C,0DACA,kBAAC,IAAD,CAAMF,OAAQ,kBAAC,IAAD,MAAiBC,UAAW,kBAAC,IAAD,CAASC,KAAK,WAAd,MAA1C,wCACA,kBAAC,IAAD,CAAMF,OAAQ,kBAAC,IAAD,MAAuBC,UAAW,kBAAC,IAAD,CAASC,KAAK,WAAd,MAAhD,kFCmBYC,EAhCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVP,EAFU,KAEGU,EAFH,OAGWH,qBAHX,mBAGVI,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WACTC,IAAQC,WAAU,YAAgC,IAAD,IAA5BC,OAAUX,EAAkB,EAAlBA,KAAMY,EAAY,EAAZA,KACpC,GAAa,yBAATZ,EAAiC,CACpC,IAAMa,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAGxC,mBAAAQ,EAAAC,OAAA,kEAAAD,EAAA,MACoBZ,IAAQc,YAAY,wBADxC,OACOC,EADP,OAECnB,EAAQmB,GACRjB,EAAU,MAHX,qCAKAkB,KACE,IAMH,OACC,kBAAC,IAAD,CAAMtB,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMb,GAAG,OAAOE,YAAaA,EAAaD,GANjC,SAAAgC,GACVtB,EAAesB,EAAEC,cAAcC,QAAQC,SCpBzCpB,IAAQqB,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAASlB,SAASmB,eAAe,W","file":"static/js/main.b088c1c3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon24Message from '@vkontakte/icons/dist/24/message';\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\nimport { Panel, PanelHeader, Group, Cell, Avatar, Separator, Counter, List } from \"@vkontakte/vkui\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Профиль</PanelHeader>\n\n\t\t<Group>\n\t\t\t<center><Avatar src=\"http://foodbank.bradfrostweb.com/patternlab/v1/images/fpo_avatar.png\" size={80}></Avatar></center>\n\t\t\t<center><Cell><b>Имя Фамилия</b></Cell></center>\n\t\t</Group>\n\t\t<Separator />\n\t\t<Group>\n\t\t\t<List>\n\t\t\t<Cell before={<Icon24Message />} indicator={<Counter type=\"primary\">n</Counter>}>Сообщения</Cell>\n\t\t\t<Cell before={<Icon24Coins />} indicator={<Counter type=\"primary\">n</Counter>}>Монеты</Cell>\n\t\t\t<Cell before={<Icon24MoneyCircle />} indicator={<Counter type=\"primary\">n</Counter>}>Монеты в банке</Cell>\n\t\t\t</List>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState();\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}